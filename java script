const X_CLASS = 'x';
const O_CLASS = 'o';
const WINNING_COMBINATIONS = [
  [0, 1, 2],
  [3, 4, 5],
  [6, 7, 8],
  [0, 3, 6],
  [1, 4, 7],
  [2, 5, 8],
  [0, 4, 8],
  [2, 4, 6]
];

const board = document.getElementById('board');
const cells = document.querySelectorAll('.cell');
const status = document.getElementById('status');
const restartBtn = document.getElementById('restartBtn');

let currentPlayer = X_CLASS;
let gameActive = true;

function handleCellClick(event) {
  const cell = event.target;
  const index = cell.dataset.index;

  if (cell.classList.contains(X_CLASS) || cell.classList.contains(O_CLASS) || !gameActive) {
    return;
  }

  cell.classList.add(currentPlayer);
  if (checkWin(currentPlayer)) {
    endGame(false);
  } else if (isDraw()) {
    endGame(true);
  } else {
    currentPlayer = currentPlayer === X_CLASS ? O_CLASS : X_CLASS;
    status.innerText = `${currentPlayer}'s turn`;
  }
}

function checkWin(player) {
  return WINNING_COMBINATIONS.some(combination => {
    return combination.every(index => {
      return cells[index].classList.contains(player);
    });
  });
}

function isDraw() {
  return [...cells].every(cell => {
    return cell.classList.contains(X_CLASS) || cell.classList.contains(O_CLASS);
  });
}

function endGame(draw) {
  if (draw) {
    status.innerText = 'It\'s a Draw!';
  } else {
    status.innerText = `${currentPlayer} Wins!`;
  }
  gameActive = false;
}

function restartGame() {
  cells.forEach(cell => {
    cell.classList.remove(X_CLASS);
    cell.classList.remove(O_CLASS);
  });
  currentPlayer = X_CLASS;
  status.innerText = `${currentPlayer}'s turn`;
  gameActive = true;
}

cells.forEach(cell => {
  cell.addEventListener('click', handleCellClick);
});

restartBtn.addEventListener('click', restartGame);
